application {
	config {
		baseName knowledge
		packageName knowledge
		buildTool gradle
		clientFramework react
		useSass true
		prodDatabaseType mariadb
		enableSwaggerCodegen true
		languages [en, sv]
		jhiPrefix app
		testFrameworks [protractor, cucumber, gatling]
	}
	entities *
}
// Active Status Reference Data
enum ActiveStatus {
	ACTIVE
	INACTIVE
}

// KnowlDevActivity Reference Data
enum KnowlDevActivityType {
	NONE
}
enum KnowlDevActivityStatus {
	NONE
}
entity KnowlDevActivity{
	type KnowlDevActivityType required
	status KnowlDevActivityStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlDevArtifact Reference Data
enum KnowlDevArtifactType {
	NONE
}
enum KnowlDevArtifactStatus {
	NONE
}
entity KnowlDevArtifact{
	type KnowlDevArtifactType required
	status KnowlDevArtifactStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlDevTask Reference Data
enum KnowlDevTaskType {
	NONE
}
enum KnowlDevTaskStatus {
	NONE
}
entity KnowlDevTask{
	type KnowlDevTaskType required
	status KnowlDevTaskStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlDevCheck Reference Data
enum KnowlDevCheckType {
	NONE
}
enum KnowlDevCheckStatus {
	NONE
}
entity KnowlDevCheck{
	type KnowlDevCheckType required
	status KnowlDevCheckStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlArchtComponent Reference Data
enum KnowlArchtComponentType {
	NONE
}
enum KnowlArchtComponentStatus {
	NONE
}
entity KnowlArchtComponent{
	type KnowlArchtComponentType required
	status KnowlArchtComponentStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlArchtFramework Reference Data
enum KnowlArchtFrameworkType {
	NONE
}
enum KnowlArchtFrameworkStatus {
	NONE
}
entity KnowlArchtFramework{
	type KnowlArchtFrameworkType required
	status KnowlArchtFrameworkStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlArchtPlatform Reference Data
enum KnowlArchtPlatformType {
	NONE
}
enum KnowlArchtPlatformStatus {
	NONE
}
entity KnowlArchtPlatform{
	type KnowlArchtPlatformType required
	status KnowlArchtPlatformStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlDevTool Reference Data
enum KnowlDevToolType {
	NONE
}
enum KnowlDevToolStatus {
	NONE
}
entity KnowlDevTool{
	type KnowlDevToolType required
	status KnowlDevToolStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlDevPattern Reference Data
enum KnowlDevPatternType {
	NONE
}
enum KnowlDevPatternStatus {
	NONE
}
entity KnowlDevPattern{
	type KnowlDevPatternType required
	status KnowlDevPatternStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}




// KnowlDevFramework Reference Data
enum KnowlDevFrameworkType {
	NONE
}
enum KnowlDevFrameworkStatus {
	NONE
}
entity KnowlDevFramework{
	type KnowlDevFrameworkType required
	status KnowlDevFrameworkStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlDevLibrary Reference Data
enum KnowlDevLibraryType {
	NONE
}
enum KnowlDevLibraryStatus {
	NONE
}
entity KnowlDevLibrary{
	type KnowlDevLibraryType required
	status KnowlDevLibraryStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

// KnowlDevTerm Reference Data
enum KnowlDevTermType {
	NONE
}
enum KnowlDevTermStatus {
	NONE
}
entity KnowlDevTerm{
	type KnowlDevTermType required
	status KnowlDevTermStatus required
	subject String required unique
	url String required
	key String required unique
	description String  required
	level Integer required
	content TextBlob
	image ImageBlob
	active ActiveStatus required
}

relationship OneToMany {
	KnowlArchtComponent{task(subject)} to KnowlDevTask{component(subject) required}
	KnowlArchtPlatform{task(subject)} to KnowlDevTask{platform(subject) required}
	KnowlArchtFramework{task(subject)} to KnowlDevTask{framework(subject) required}
	KnowlDevActivity{task(subject)} to KnowlDevTask{activity(subject) required}

	KnowlDevTask{artifact(subject) required} to KnowlDevArtifact{task(subject) required}
	KnowlDevTask{check(subject)} to KnowlDevCheck{task(subject) required}
	KnowlDevTask{tool(subject)} to KnowlDevTool{task(subject) required}
	KnowlDevTask{pattern(subject)} to KnowlDevPattern{task(subject) required}
	KnowlDevTask{framework(subject)} to KnowlDevFramework{task(subject) required}
	KnowlDevTask{library(subject)} to KnowlDevLibrary{task(subject) required}
	KnowlDevTask{library(subject)} to KnowlDevTerm{task(subject) required}

}

paginate KnowlDevTask with infinite-scroll
service KnowlDevTask with serviceImpl
dto KnowlDevTask with mapstruct
